---
title: "PyIRT"
author: "Bertrand Wilden"
date: "2024-06-13"
categories: [Bayes, Tutorial, brms]
max-description-length: 20
number-sections: true
draft: true
output:
  html_document:
    dev: ragg_png
execute: 
  message: false
  warning: false
jupyter: python3
---

```{python}
#| warning: false
import numpy as np
import polars as pl
import matplotlib.pyplot as plt
import pymc as pm
from scipy.stats import norm

fig, ax = plt.subplots(1, 1)
```

```{python}
def rnorm(value):
  return norm.rvs(loc=value * 3)
```

```{python}
df = pl.DataFrame(
  {
    "x": norm.rvs(size=100)
  }
)
df = df.select(
  (pl.col("x")),
  (pl.col("x").map_elements(rnorm, return_dtype=pl.Float64).alias("y"))
)
print(df)
```

```{python}
with Model() as model:
      # Define priors
    sigma = HalfCauchy("sigma", beta=10)
    intercept = Normal("Intercept", 0, sigma=20)
    slope = Normal("slope", 0, sigma=20)

    # Define likelihood
    likelihood = Normal("y", mu=intercept + slope * df.select(pl.col("x")), sigma=sigma, observed=df.select(pl.col("y")))

    # Inference!
    # draw 3000 posterior samples using NUTS sampling
    idata = sample(3000)
```


